swagger: '2.0'
info:
  version: 1.0.0
  title: Spark Rest API
  license:
    name: MIT
host: 127.0.0.1:4567
basePath: /
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /users:
    get:
      summary: List users
      operationId: getUsers
      responses:
        '200':
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    post:
      summary: Create user
      operationId: createUser
      parameters:
      - name: user
        in: body
        description: User to create
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        '201':
          description: Successful operation
          schema:
            $ref: '#/definitions/User'
  /users/{id}:
    get:
      summary: Get user based on the id
      operationId: getUserById
      parameters:
      - name: id
        in: path
        description: id of the user
        required: true
        type: integer
        format: int64
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/User'
    put:
      summary: Update user based on the id
      operationId: updateUserById
      parameters:
      - name: id
        in: path
        description: id of the user
        required: true
        type: integer
        format: int64
      - name: user
        in: body
        description: User to create
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/User'
    delete:
      summary: Delte user based on the id
      operationId: deleteUserById
      parameters:
      - name: id
        in: path
        description: id of the user
        required: true
        type: integer
        format: int64
      responses:
        '200':
          description: Successful operation
definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      email:
        type: string
      password:
        type: string